#!/usr/bin/env python3

import pygraphviz

INPUT_PREFIXES = [ 'input', 'output' ]

COMPLEMENTS = { 'A' : 'T', 'T' : 'A', 'C' : 'G', 'G' : 'C' }

def reverse_complement(sequence):
    rc = ''
    for base in sequence[::-1]:
        rc += COMPLEMENTS[base]
    return rc

for prefix in INPUT_PREFIXES:
    input_dot = pygraphviz.AGraph(prefix + '.dot')
    input_fa = {}
    with open(prefix + '.fa', 'r') as f:
        while True:
            name = f.readline()
            if name == '': break
            name = name.strip()[1:]
            sequence = f.readline().strip()

            input_fa[name + "+"] = sequence
            input_fa[name + "-"] = reverse_complement(sequence)

    output_dot = pygraphviz.AGraph(name='adj', directed=True, strict=False, rankdir='LR')

    for node in input_dot.nodes():
        #if node[-1] == "+":
        #    output_dot.add_node(node[:-1] + ": " + input_fa[node[:-1]])
        output_dot.add_node(node + ": " + input_fa[node])

    for edge in input_dot.edges():
        #if edge[0][-1] == "+":
        #    node1 = edge[0][:-1] + ": " + input_fa[edge[0][:-1]]
        #    node2 = edge[1][:-1] + ": " + input_fa[edge[1][:-1]]
        #    output_dot.add_edge(node1, node2)
        node1 = edge[0] + ": " + input_fa[edge[0]]
        node2 = edge[1] + ": " + input_fa[edge[1]]
        output_dot.add_edge(node1, node2)

    output_dot.draw(prefix + '.png', prog='dot')